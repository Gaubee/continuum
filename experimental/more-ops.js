var ADD                    = new StandardOpCode(0, 'ADD'),
    BITAND                 = new StandardOpCode(0, 'BITAND'),
    BITNOT                 = new StandardOpCode(0, 'BITNOT'),
    BITOR                  = new StandardOpCode(0, 'BITOR'),
    BITXOR                 = new StandardOpCode(0, 'BITXOR'),
    DIV                    = new StandardOpCode(0, 'DIV'),
    EQ                     = new StandardOpCode(0, 'EQ'),
    EQ_NULL                = new StandardOpCode(0, 'EQ_NULL'),
    GT                     = new StandardOpCode(0, 'GT'),
    GTE                    = new StandardOpCode(0, 'GTE'),
    HAS_INSTANCE           = new StandardOpCode(0, 'HAS_INSTANCE'),
    IN                     = new StandardOpCode(0, 'IN'),
    INSTANCEOF             = new StandardOpCode(0, 'INSTANCEOF'),
    IS_BOOLEAN             = new StandardOpCode(0, 'IS_BOOLEAN'),
    IS_FUNCTION            = new StandardOpCode(0, 'IS_FUNCTION'),
    IS_NUMBER              = new StandardOpCode(0, 'IS_NUMBER'),
    IS_OBJECT              = new StandardOpCode(0, 'IS_OBJECT'),
    IS_STRING              = new StandardOpCode(0, 'IS_STRING'),
    IS_UNDEFINED           = new StandardOpCode(0, 'IS_UNDEFINED'),
    LSHIFT                 = new StandardOpCode(0, 'LSHIFT'),
    LT                     = new StandardOpCode(0, 'LT'),
    LTE                    = new StandardOpCode(0, 'LTE'),
    MOD                    = new StandardOpCode(0, 'MOD'),
    MUL                    = new StandardOpCode(0, 'MUL'),
    NEGATE                 = new StandardOpCode(0, 'NEGATE'),
    NEQ                    = new StandardOpCode(0, 'NEQ'),
    NEQ_NULL               = new StandardOpCode(0, 'NEQ_NULL'),
    NOT                    = new StandardOpCode(0, 'NOT'),
    STRICT_NEQ             = new StandardOpCode(0, 'STRICT_NEQ'),
    POST_DEC               = new StandardOpCode(0, 'POST_DEC'),
    POST_INC               = new StandardOpCode(0, 'POST_INC'),
    PRE_DEC                = new StandardOpCode(0, 'PRE_DEC'),
    PRE_INC                = new StandardOpCode(0, 'PRE_INC'),
    RSHIFT                 = new StandardOpCode(0, 'RSHIFT'),
    STRICT_EQ              = new StandardOpCode(0, 'STRICT_EQ'),
    SUB                    = new StandardOpCode(0, 'SUB'),
    TO_NUMBER              = new StandardOpCode(0, 'TO_NUMBER'),
    TYPEOF                 = new StandardOpCode(0, 'TYPEOF'),
    URSHIFT                = new StandardOpCode(0, 'URSHIFT'),
    ABRUPT_CHECK           = new StandardOpCode(0, 'ABRUPT_CHECK'),
    COMPLETION_CHECK       = new StandardOpCode(0, 'ABRUPT_CHECK'),
    STRCAT                 = new StandardOpCode(0, 'STRCAT'),
    TO_PRIMITIVE           = new StandardOpCode(0, 'TO_PRIMITIVE'),

    ENTER                  = new StandardOpCode(0, 'ENTER'),
    CREATE_ACTIVATION      = new StandardOpCode(0, 'CREATE_ACTIVATION'),
    INIT_LAZY_REG          = new StandardOpCode(0, 'INIT_LAZY_REG'),
    CREATE_ARGUMENTS       = new StandardOpCode(0, 'CREATE_ARGUMENTS'),
    CREATE_THIS            = new StandardOpCode(0, 'CREATE_THIS'),
    GET_CALLEE             = new StandardOpCode(0, 'GET_CALLEE'),
    CONVERT_THIS           = new StandardOpCode(0, 'CONVERT_THIS'),

    NEW_OBJECT             = new StandardOpCode(0, 'NEW_OBJECT');
    NEW_ARRAY              = new StandardOpCode(0, 'NEW_ARRAY');
    NEW_REGEXP             = new StandardOpCode(0, 'NEW_REGEXP');
    MOV                    = new StandardOpCode(0, 'MOV');


    RESOLVE                = new StandardOpCode(0, 'RESOLVE'),
    RESOLVE_SKIP           = new StandardOpCode(0, 'RESOLVE_SKIP'),
    RESOLVE_GLOBAL         = new StandardOpCode(0, 'RESOLVE_GLOBAL'),
    RESOLVE_GLOBAL_DYNAMIC = new StandardOpCode(0, 'RESOLVE_GLOBAL_DYNAMIC'),
    GET_SCOPED_VAR         = new StandardOpCode(0, 'GET_SCOPED_VAR'),
    PUT_SCOPED_VAR         = new StandardOpCode(0, 'PUT_SCOPED_VAR'),
    GET_GLOBAL_VAR         = new StandardOpCode(0, 'GET_GLOBAL_VAR'),
    PUT_GLOBAL_VAR         = new StandardOpCode(0, 'PUT_GLOBAL_VAR'),
    RESOLVE_BASE           = new StandardOpCode(0, 'RESOLVE_BASE'),
    ENSURE_PROPERTY_EXISTS = new StandardOpCode(0, 'ENSURE_PROPERTY_EXISTS'),
    RESOLVE_WITH_BASE      = new StandardOpCode(0, 'RESOLVE_WITH_BASE'),
    RESOLVE_WITH_THIS      = new StandardOpCode(0, 'RESOLVE_WITH_THIS'),
    GET_BY_ID              = new StandardOpCode(0, 'GET_BY_ID'),
    GET_BY_ID_SELF         = new StandardOpCode(0, 'GET_BY_ID_SELF'),
    GET_BY_ID_PROTO        = new StandardOpCode(0, 'GET_BY_ID_PROTO'),
    GET_BY_ID_CHAIN        = new StandardOpCode(0, 'GET_BY_ID_CHAIN'),
    GET_BY_ID_GETTER_SELF  = new StandardOpCode(0, 'GET_BY_ID_GETTER_SELF'),
    GET_BY_ID_GETTER_PROTO = new StandardOpCode(0, 'GET_BY_ID_GETTER_PROTO'),
    GET_BY_ID_GETTER_CHAIN = new StandardOpCode(0, 'GET_BY_ID_GETTER_CHAIN'),
    GET_BY_ID_CUSTOM_SELF  = new StandardOpCode(0, 'GET_BY_ID_CUSTOM_SELF'),
    GET_BY_ID_CUSTOM_PROTO = new StandardOpCode(0, 'GET_BY_ID_CUSTOM_PROTO'),
    GET_BY_ID_CUSTOM_CHAIN = new StandardOpCode(0, 'GET_BY_ID_CUSTOM_CHAIN'),
    GET_BY_ID_GENERIC      = new StandardOpCode(0, 'GET_BY_ID_GENERIC'),
    GET_ARRAY_LENGTH       = new StandardOpCode(0, 'GET_ARRAY_LENGTH'),
    GET_STRING_LENGTH      = new StandardOpCode(0, 'GET_STRING_LENGTH'),
    GET_ARGUMENTS_LENGTH   = new StandardOpCode(0, 'GET_ARGUMENTS_LENGTH'),
    PUT_BY_ID              = new StandardOpCode(0, 'PUT_BY_ID'),
    PUT_BY_ID_TRANSITION   = new StandardOpCode(0, 'PUT_BY_ID_TRANSITION'),
    PUT_BY_ID_REPLACE      = new StandardOpCode(0, 'PUT_BY_ID_REPLACE'),
    PUT_BY_ID_GENERIC      = new StandardOpCode(0, 'PUT_BY_ID_GENERIC'),
    DEL_BY_ID              = new StandardOpCode(0, 'DEL_BY_ID'),
    GET_BY_VAL             = new StandardOpCode(0, 'GET_BY_VAL'),
    GET_ARGUMENT_BY_VAL    = new StandardOpCode(0, 'GET_ARGUMENT_BY_VAL'),
    GET_BY_PNAME           = new StandardOpCode(0, 'GET_BY_PNAME'),
    PUT_BY_VAL             = new StandardOpCode(0, 'PUT_BY_VAL'),
    DEL_BY_VAL             = new StandardOpCode(0, 'DEL_BY_VAL'),
    PUT_BY_INDEX           = new StandardOpCode(0, 'PUT_BY_INDEX'),
    PUT_GETTER_SETTER      = new StandardOpCode(0, 'PUT_GETTER_SETTER'),

    JMP                    = new StandardOpCode(0, 'JMP'),
    JTRUE                  = new StandardOpCode(0, 'JTRUE'),
    JFALSE                 = new StandardOpCode(0, 'JFALSE'),
    JEQ_NULL               = new StandardOpCode(0, 'JEQ_NULL'),
    JNEQ_NULL              = new StandardOpCode(0, 'JNEQ_NULL'),
    JNEQ_PTR               = new StandardOpCode(0, 'JNEQ_PTR'),
    JLT                    = new StandardOpCode(0, 'JLT'),
    JLTE                   = new StandardOpCode(0, 'JLTE'),
    JGT                    = new StandardOpCode(0, 'JGT'),
    JGTE                   = new StandardOpCode(0, 'JGTE'),
    JNLT                   = new StandardOpCode(0, 'JNLT'),
    JNLTE                  = new StandardOpCode(0, 'JNLTE'),
    JNGT                   = new StandardOpCode(0, 'JNGT'),
    JNGTE                  = new StandardOpCode(0, 'JNGTE'),
    JMP_SCOPES             = new StandardOpCode(0, 'JMP_SCOPES'),
    LOOP                   = new StandardOpCode(0, 'LOOP'),
    LOOP_IF_TRUE           = new StandardOpCode(0, 'LOOP_IF_TRUE'),
    LOOP_IF_FALSE          = new StandardOpCode(0, 'LOOP_IF_FALSE'),
    LOOP_IF_LT             = new StandardOpCode(0, 'LOOP_IF_LT'),
    LOOP_IF_LTE            = new StandardOpCode(0, 'LOOP_IF_LTE'),
    LOOP_IF_GT             = new StandardOpCode(0, 'LOOP_IF_GT'),
    LOOP_IF_GTE            = new StandardOpCode(0, 'LOOP_IF_GTE'),
    LOOP_HINT              = new StandardOpCode(0, 'LOOP_HINT'),
    SWITCH_IMM             = new StandardOpCode(0, 'SWITCH_IMM'),
    SWITCH_CHAR            = new StandardOpCode(0, 'SWITCH_CHAR'),
    SWITCH_STRING          = new StandardOpCode(0, 'SWITCH_STRING'),

    NEW_FUNC               = new StandardOpCode(0, 'NEW_FUNC'),
    NEW_FUNC_EXP           = new StandardOpCode(0, 'NEW_FUNC_EXP'),
    CALL                   = new StandardOpCode(0, 'CALL'),
    CALL_EVAL              = new StandardOpCode(0, 'CALL_EVAL'),
    CALL_VARARGS           = new StandardOpCode(0, 'CALL_VARARGS'),
    TEAR_OFF_ACTIVATION    = new StandardOpCode(0, 'TEAR_OFF_ACTIVATION'),
    TEAR_OFF_ARGUMENTS     = new StandardOpCode(0, 'TEAR_OFF_ARGUMENTS'),
    RET                    = new StandardOpCode(0, 'RET'),
    CALL_PUT_RESULT        = new StandardOpCode(0, 'CALL_PUT_RESULT'),
    RET_OBJECT_OR_THIS     = new StandardOpCode(0, 'RET_OBJECT_OR_THIS'),
    METHOD_CHECK           = new StandardOpCode(0, 'METHOD_CHECK'),

    CONSTRUCT              = new StandardOpCode(0, 'CONSTRUCT'),

    GET_PNAMES             = new StandardOpCode(0, 'GET_PNAMES'),
    NEXT_PNAME             = new StandardOpCode(0, 'NEXT_PNAME'),

    PUSH_SCOPE             = new StandardOpCode(0, 'PUSH_SCOPE'),
    POP_SCOPE              = new StandardOpCode(0, 'POP_SCOPE'),
    PUSH_NEW_SCOPE         = new StandardOpCode(0, 'PUSH_NEW_SCOPE'),

    CATCH                  = new StandardOpCode(0, 'CATCH'),
    THROW                  = new StandardOpCode(0, 'THROW'),
    THROW_REFERENCE_ERROR  = new StandardOpCode(0, 'THROW_REFERENCE_ERROR'),

    JSR                    = new StandardOpCode(0, 'JSR'),
    SRET                   = new StandardOpCode(0, 'SRET'),

    DEBUG                  = new StandardOpCode(0, 'DEBUG'),
    PROFILE_WILL_CALL      = new StandardOpCode(0, 'PROFILE_WILL_CALL'),
    PROFILE_DID_CALL       = new StandardOpCode(0, 'PROFILE_DID_CALL'),

    END                    = new StandardOpCode(0, 'END');
